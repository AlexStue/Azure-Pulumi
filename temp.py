import pulumi
from pulumi_azure_native import network, resources

# Azure region
region = "germanywestcentral"

# ------------------------------------------------------------------

# Create a Resource Group
resource_group = resources.ResourceGroup("resourceGroup", location=region)

# Create a Virtual Network
vnet = network.VirtualNetwork(
    "vNet",
    resource_group_name=resource_group.name,
    location=resource_group.location,
    address_space={"addressPrefixes": ["10.0.0.0/16"]},
)

#VNET# Public Subnets
public_subnet_az1 = network.Subnet(
    "publicSubnetAz1",
    resource_group_name=resource_group.name,
    virtual_network_name=vnet.name,
    address_prefix="10.0.1.0/24",
)

#VNET# Private Subnets
private_subnet_az1 = network.Subnet(
    "privateSubnetAz1",
    resource_group_name=resource_group.name,
    virtual_network_name=vnet.name,
    address_prefix="10.0.3.0/24",
)

# ------------------------------------------------------------------

#SUB# Public IPs for NAT Gateways
public_ip_az1 = network.PublicIPAddress(
    "publicIpAz1",
    resource_group_name=resource_group.name,
    location=resource_group.location,
    sku={"name": "Standard"},
    allocation_method="Static",
)

#SUB# NAT Gateways
nat_gateway_az1 = network.NatGateway(
    "natGatewayAz1",
    resource_group_name=resource_group.name,
    location=resource_group.location,
    public_ip_addresses=[{"id": public_ip_az1.id}],
    sku={"name": "Standard"},
)

#SUB# Associate NAT Gateways with Public Subnets
nat_association_az1 = network.SubnetNatGatewayAssociation(
    "natAssociationAz1",
    subnet_id=public_subnet_az1.id,
    nat_gateway_id=nat_gateway_az1.id,
)

#VNET# Route Tables
route_table_private_az1 = network.RouteTable(
    "routeTablePrivateAz1",
    resource_group_name=resource_group.name,
    location=resource_group.location,
)

#SUB# Associate Route Tables with Private Subnets
private_subnet_rt_association_az1 = network.SubnetRouteTableAssociation(
    "privateSubnetRouteTableAssociationAz1",
    subnet_id=private_subnet_az1.id,
    route_table_id=route_table_private_az1.id,
)

#VNET## Network Security Groups (NSGs)
nsg_public = network.NetworkSecurityGroup(
    "nsgPublic",
    resource_group_name=resource_group.name,
    location=resource_group.location,
)

#VNET#
nsg_private = network.NetworkSecurityGroup(
    "nsgPrivate",
    resource_group_name=resource_group.name,
    location=resource_group.location,
)

#VNET# NSG Rules for Port 80
nsg_rule_http = network.SecurityRule(
    "nsgRuleHttp",
    resource_group_name=resource_group.name,
    network_security_group_name=nsg_public.name,
    priority=100,
    access="Allow",
    direction="Inbound",
    protocol="Tcp",
    source_port_range="*",
    destination_port_range="80",
    source_address_prefix="*",
    destination_address_prefix="*",
)

#SUB# Associate NSGs with Subnets
public_nsg_association_az1 = network.SubnetNetworkSecurityGroupAssociation(
    "publicNsgAssociationAz1",
    subnet_id=public_subnet_az1.id,
    network_security_group_id=nsg_public.id,
)

#SUB#
private_nsg_association_az1 = network.SubnetNetworkSecurityGroupAssociation(
    "privateNsgAssociationAz1",
    subnet_id=private_subnet_az1.id,
    network_security_group_id=nsg_private.id,
)


#VM# Network Interfaces for VMs
nic_az1 = network.NetworkInterface(
    "nicAz1",
    resource_group_name=resource_group.name,
    location=resource_group.location,
    ip_configurations=[
        {
            "name": "ipconfigAz1",
            "subnet": {"id": private_subnet_az1.id},
            "private_ip_allocation_method": "Dynamic",
        }
    ],
)

#VM# Custom Script for VMs
script = """#!/bin/bash
sudo apt update
sudo apt install -y nginx
echo "Hi, I am the Azure Instance {instance_number} generated by Pulumi" | sudo tee /var/www/html/index.html
sudo systemctl start nginx
"""

#VM# Virtual Machines
vm_az1 = compute.VirtualMachine(
    "vmAz1",
    resource_group_name=resource_group.name,
    location=resource_group.location,
    network_profile={"network_interfaces": [{"id": nic_az1.id}]},
    hardware_profile={"vm_size": "Standard_B1s"},
    storage_profile={
        "os_disk": {
            "create_option": "FromImage",
            "managed_disk": {"storage_account_type": "Standard_LRS"},
        },
        "image_reference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest",
        },
    },
    os_profile={
        "computer_name": "vmAz1",
        "admin_username": "azureuser",
        "admin_password": "P@ssword1234!",
        "custom_data": script.format(instance_number=1),
    },
)




# Outputs
pulumi.export("vnet_name", vnet.name)
pulumi.export("public_subnet_az1_id", public_subnet_az1.id)
pulumi.export("public_subnet_az2_id", public_subnet_az2.id)
pulumi.export("private_subnet_az1_id", private_subnet_az1.id)
pulumi.export("private_subnet_az2_id", private_subnet_az2.id)
